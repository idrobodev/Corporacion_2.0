[{"/Users/todoporunalma/Desktop/coptua_react/src/index.js":"1","/Users/todoporunalma/Desktop/coptua_react/src/App.js":"2","/Users/todoporunalma/Desktop/coptua_react/src/reportWebVitals.js":"3","/Users/todoporunalma/Desktop/coptua_react/src/components/Context/AuthContext.jsx":"4","/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Formatos.jsx":"5","/Users/todoporunalma/Desktop/coptua_react/src/components/Context/SidebarContext.jsx":"6","/Users/todoporunalma/Desktop/coptua_react/src/components/Footer/Footer.jsx":"7","/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Dashboard.jsx":"8","/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Configuracion.jsx":"9","/Users/todoporunalma/Desktop/coptua_react/src/pages/Contact/Contact.jsx":"10","/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Participantes.jsx":"11","/Users/todoporunalma/Desktop/coptua_react/src/pages/Home/Home.jsx":"12","/Users/todoporunalma/Desktop/coptua_react/src/pages/NotFound/NotFound.jsx":"13","/Users/todoporunalma/Desktop/coptua_react/src/components/Header/Header.jsx":"14","/Users/todoporunalma/Desktop/coptua_react/src/pages/Login/Login.jsx":"15","/Users/todoporunalma/Desktop/coptua_react/src/pages/Donate/Donate.jsx":"16","/Users/todoporunalma/Desktop/coptua_react/src/components/PrivateRoute/PrivateRoute.jsx":"17","/Users/todoporunalma/Desktop/coptua_react/src/pages/About/About.jsx":"18","/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Finance.jsx":"19","/Users/todoporunalma/Desktop/coptua_react/src/pages/Programs/Programs.jsx":"20","/Users/todoporunalma/Desktop/coptua_react/src/services/databaseService.js":"21","/Users/todoporunalma/Desktop/coptua_react/src/services/storageService.js":"22","/Users/todoporunalma/Desktop/coptua_react/src/hooks/useSidebar.js":"23","/Users/todoporunalma/Desktop/coptua_react/src/components/Dashboard/Sidebar.jsx":"24","/Users/todoporunalma/Desktop/coptua_react/src/components/UI/GradientText.jsx":"25","/Users/todoporunalma/Desktop/coptua_react/src/components/Dashboard/DashboardHeader.jsx":"26","/Users/todoporunalma/Desktop/coptua_react/src/components/UI/LoadingSpinner.jsx":"27","/Users/todoporunalma/Desktop/coptua_react/src/components/VisitorCounter/VisitorCounterMobile.jsx":"28","/Users/todoporunalma/Desktop/coptua_react/src/components/VisitorCounter/VisitorCounter.jsx":"29","/Users/todoporunalma/Desktop/coptua_react/src/components/SEO/SEO.jsx":"30","/Users/todoporunalma/Desktop/coptua_react/src/components/CustomerReviews/CustomerReviews.jsx":"31","/Users/todoporunalma/Desktop/coptua_react/src/components/Feature/Feature.jsx":"32","/Users/todoporunalma/Desktop/coptua_react/src/components/HappyCustomers/HappyCustomers.jsx":"33","/Users/todoporunalma/Desktop/coptua_react/src/components/Menu/Menu.jsx":"34","/Users/todoporunalma/Desktop/coptua_react/src/components/Breadcrumbs/Breadcrumbs.jsx":"35","/Users/todoporunalma/Desktop/coptua_react/src/components/TransformationStories/TransformationStories.jsx":"36","/Users/todoporunalma/Desktop/coptua_react/src/components/Dashboard/DashboardLayout.jsx":"37","/Users/todoporunalma/Desktop/coptua_react/src/components/Banner/Banner.jsx":"38","/Users/todoporunalma/Desktop/coptua_react/src/hooks/useVisitorCounter.js":"39","/Users/todoporunalma/Desktop/coptua_react/src/components/CustomerReviews/Review.jsx":"40","/Users/todoporunalma/Desktop/coptua_react/src/components/Feature/FeatureItem.jsx":"41","/Users/todoporunalma/Desktop/coptua_react/src/services/visitorCounterService.js":"42","/Users/todoporunalma/Desktop/coptua_react/src/hooks/useDebouncedSearch.js":"43","/Users/todoporunalma/Desktop/coptua_react/src/components/Common/LoadingSpinner.jsx":"44","/Users/todoporunalma/Desktop/coptua_react/src/services/apiService.js":"45","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/index.js":"46","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/App.js":"47","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/reportWebVitals.js":"48","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/contexts/SidebarContext.jsx":"49","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/contexts/AuthContext.jsx":"50","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Footer.jsx":"51","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/auth/ProtectedRoute.jsx":"52","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Contact/Contact.jsx":"53","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Finance.jsx":"54","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Formatos.jsx":"55","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/About/About.jsx":"56","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Participantes.jsx":"57","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Sedes.jsx":"58","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Header.jsx":"59","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Home/Home.jsx":"60","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Donate/Donate.jsx":"61","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Dashboard.jsx":"62","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/NotFound/NotFound.jsx":"63","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Programs/Programs.jsx":"64","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Configuracion.jsx":"65","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Login/Login.jsx":"66","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/hooks/useSidebar.js":"67","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/hooks/useDebouncedSearch.js":"68","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/api.js":"69","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/database.js":"70","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/storage.js":"71","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/utils/fileUtils.js":"72","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/DashboardLayout.jsx":"73","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Menu.jsx":"74","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/VisitorCounter.jsx":"75","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/HappyCustomers.jsx":"76","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/CustomerReviews.jsx":"77","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/Feature.jsx":"78","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/Banner.jsx":"79","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/UI/GradientText.jsx":"80","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/SEO.jsx":"81","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/TransformationStories.jsx":"82","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/VisitorCounterMobile.jsx":"83","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/dashboard/Breadcrumbs.jsx":"84","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/UI/LoadingSpinner.jsx":"85","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/Common/LoadingSpinner.jsx":"86","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/hooks/useVisitorCounter.js":"87","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/DashboardHeader.jsx":"88","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/FeatureItem.jsx":"89","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Sidebar.jsx":"90","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/Review.jsx":"91","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/visitorCounter.js":"92"},{"size":701,"mtime":1758242023760,"results":"93","hashOfConfig":"94"},{"size":3232,"mtime":1758290242338,"results":"95","hashOfConfig":"94"},{"size":362,"mtime":1758204004080,"results":"96","hashOfConfig":"94"},{"size":1737,"mtime":1758289999703,"results":"97","hashOfConfig":"94"},{"size":19359,"mtime":1758234703936,"results":"98","hashOfConfig":"94"},{"size":805,"mtime":1758217347021,"results":"99","hashOfConfig":"94"},{"size":7791,"mtime":1758204004042,"results":"100","hashOfConfig":"94"},{"size":7774,"mtime":1758293121051,"results":"101","hashOfConfig":"94"},{"size":8900,"mtime":1758290426070,"results":"102","hashOfConfig":"94"},{"size":20423,"mtime":1758290452313,"results":"103","hashOfConfig":"94"},{"size":19540,"mtime":1758293086337,"results":"104","hashOfConfig":"94"},{"size":1286,"mtime":1758204004079,"results":"105","hashOfConfig":"94"},{"size":706,"mtime":1758204004079,"results":"106","hashOfConfig":"94"},{"size":197,"mtime":1758204004052,"results":"107","hashOfConfig":"94"},{"size":4941,"mtime":1758244204840,"results":"108","hashOfConfig":"94"},{"size":8760,"mtime":1758204004078,"results":"109","hashOfConfig":"94"},{"size":555,"mtime":1758242023759,"results":"110","hashOfConfig":"94"},{"size":21157,"mtime":1758234679233,"results":"111","hashOfConfig":"94"},{"size":20050,"mtime":1758236986586,"results":"112","hashOfConfig":"94"},{"size":14636,"mtime":1758234731253,"results":"113","hashOfConfig":"94"},{"size":1855,"mtime":1758290091086,"results":"114","hashOfConfig":"94"},{"size":3656,"mtime":1758290388709,"results":"115","hashOfConfig":"94"},{"size":1934,"mtime":1758204004057,"results":"116","hashOfConfig":"94"},{"size":10602,"mtime":1758242023758,"results":"117","hashOfConfig":"94"},{"size":273,"mtime":1758204004057,"results":"118","hashOfConfig":"94"},{"size":5929,"mtime":1758242023758,"results":"119","hashOfConfig":"94"},{"size":587,"mtime":1758204004057,"results":"120","hashOfConfig":"94"},{"size":2562,"mtime":1758204004057,"results":"121","hashOfConfig":"94"},{"size":2722,"mtime":1758204004057,"results":"122","hashOfConfig":"94"},{"size":3825,"mtime":1758242023759,"results":"123","hashOfConfig":"94"},{"size":2403,"mtime":1758204004041,"results":"124","hashOfConfig":"94"},{"size":1273,"mtime":1758213079560,"results":"125","hashOfConfig":"94"},{"size":3936,"mtime":1758204004042,"results":"126","hashOfConfig":"94"},{"size":11243,"mtime":1758242023759,"results":"127","hashOfConfig":"94"},{"size":3186,"mtime":1758204004041,"results":"128","hashOfConfig":"94"},{"size":10878,"mtime":1758204004057,"results":"129","hashOfConfig":"94"},{"size":2042,"mtime":1758217384913,"results":"130","hashOfConfig":"94"},{"size":2009,"mtime":1758204004041,"results":"131","hashOfConfig":"94"},{"size":1532,"mtime":1758204004058,"results":"132","hashOfConfig":"94"},{"size":2357,"mtime":1758204004041,"results":"133","hashOfConfig":"94"},{"size":3468,"mtime":1758204004042,"results":"134","hashOfConfig":"94"},{"size":2735,"mtime":1758204004080,"results":"135","hashOfConfig":"94"},{"size":387,"mtime":1758221466400,"results":"136","hashOfConfig":"94"},{"size":262,"mtime":1758221471187,"results":"137","hashOfConfig":"94"},{"size":10803,"mtime":1758290926452,"results":"138","hashOfConfig":"94"},{"size":701,"mtime":1758911442479,"results":"139","hashOfConfig":"140"},{"size":3478,"mtime":1758918303812,"results":"141","hashOfConfig":"140"},{"size":362,"mtime":1758911442482,"results":"142","hashOfConfig":"140"},{"size":802,"mtime":1758911442479,"results":"143","hashOfConfig":"140"},{"size":4697,"mtime":1758911442479,"results":"144","hashOfConfig":"140"},{"size":7802,"mtime":1758911442478,"results":"145","hashOfConfig":"140"},{"size":1351,"mtime":1758911442477,"results":"146","hashOfConfig":"140"},{"size":20443,"mtime":1758911442480,"results":"147","hashOfConfig":"140"},{"size":21105,"mtime":1758911442480,"results":"148","hashOfConfig":"140"},{"size":33868,"mtime":1758911442480,"results":"149","hashOfConfig":"140"},{"size":21205,"mtime":1758911442479,"results":"150","hashOfConfig":"140"},{"size":34674,"mtime":1758920684145,"results":"151","hashOfConfig":"140"},{"size":28944,"mtime":1758919048512,"results":"152","hashOfConfig":"140"},{"size":191,"mtime":1758911442478,"results":"153","hashOfConfig":"140"},{"size":1316,"mtime":1758911442481,"results":"154","hashOfConfig":"140"},{"size":8780,"mtime":1758911442480,"results":"155","hashOfConfig":"140"},{"size":7764,"mtime":1758911442480,"results":"156","hashOfConfig":"140"},{"size":706,"mtime":1758911442481,"results":"157","hashOfConfig":"140"},{"size":14664,"mtime":1758911442481,"results":"158","hashOfConfig":"140"},{"size":8859,"mtime":1758911442480,"results":"159","hashOfConfig":"140"},{"size":5898,"mtime":1758911442481,"results":"160","hashOfConfig":"140"},{"size":1934,"mtime":1758911442479,"results":"161","hashOfConfig":"140"},{"size":387,"mtime":1758911442479,"results":"162","hashOfConfig":"140"},{"size":14255,"mtime":1758918052997,"results":"163","hashOfConfig":"140"},{"size":1959,"mtime":1758918064653,"results":"164","hashOfConfig":"140"},{"size":3621,"mtime":1758911442482,"results":"165","hashOfConfig":"140"},{"size":7112,"mtime":1758911442482,"results":"166","hashOfConfig":"140"},{"size":2046,"mtime":1758911442478,"results":"167","hashOfConfig":"140"},{"size":11254,"mtime":1758911442478,"results":"168","hashOfConfig":"140"},{"size":2725,"mtime":1758911442478,"results":"169","hashOfConfig":"140"},{"size":3946,"mtime":1758911442478,"results":"170","hashOfConfig":"140"},{"size":2406,"mtime":1758911442477,"results":"171","hashOfConfig":"140"},{"size":1273,"mtime":1758911442478,"results":"172","hashOfConfig":"140"},{"size":2019,"mtime":1758911442477,"results":"173","hashOfConfig":"140"},{"size":273,"mtime":1758911442477,"results":"174","hashOfConfig":"140"},{"size":3825,"mtime":1758911442478,"results":"175","hashOfConfig":"140"},{"size":10931,"mtime":1758911442478,"results":"176","hashOfConfig":"140"},{"size":2565,"mtime":1758911442478,"results":"177","hashOfConfig":"140"},{"size":3196,"mtime":1758911442477,"results":"178","hashOfConfig":"140"},{"size":587,"mtime":1758911442477,"results":"179","hashOfConfig":"140"},{"size":262,"mtime":1758911442476,"results":"180","hashOfConfig":"140"},{"size":1525,"mtime":1758911442479,"results":"181","hashOfConfig":"140"},{"size":5944,"mtime":1758911442478,"results":"182","hashOfConfig":"140"},{"size":3468,"mtime":1758911442478,"results":"183","hashOfConfig":"140"},{"size":10738,"mtime":1758918325958,"results":"184","hashOfConfig":"140"},{"size":2357,"mtime":1758911442478,"results":"185","hashOfConfig":"140"},{"size":2735,"mtime":1758911442482,"results":"186","hashOfConfig":"140"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"jvuji",{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ifpv0w",{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/todoporunalma/Desktop/coptua_react/src/index.js",[],["379","380"],"/Users/todoporunalma/Desktop/coptua_react/src/App.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/reportWebVitals.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Context/AuthContext.jsx",["381"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { apiService, ROLES } from \"../../services/apiService\";\nconst AuthContext = createContext();\n\n// Make useAuth\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const initializeAuth = async () => {\n      setLoading(true);\n      try {\n        const { data: user } = await apiService.getCurrentUser();\n        setCurrentUser(user);\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        setCurrentUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n\n  // User login using email password\n  const login = async (email, password) => {\n    const { data, error } = await apiService.login(email, password);\n\n    if (error) throw error;\n\n    setCurrentUser(data.user);\n    return { user: data.user };\n  };\n\n  // User logout\n  const logout = async () => {\n    const { error } = await apiService.logout();\n    if (error) throw error;\n    setCurrentUser(null);\n    return { success: true };\n  };\n\n\n  // forget Password\n  const forgetPassword = async (email) => {\n    const { error } = await apiService.resetPassword(email);\n    if (error) throw error;\n    return { success: true };\n  };\n\n\n  // Context values\n  const value = {\n    currentUser,\n    logout,\n    login,\n    forgetPassword,\n    loading,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Formatos.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Context/SidebarContext.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Footer/Footer.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Dashboard.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Configuracion.jsx",["382","383"],"import React, { useState } from \"react\";\nimport { useAuth } from \"../../components/Context/AuthContext\";\nimport { apiService } from \"../../services/apiService\";\nimport { dbService } from \"../../services/databaseService\";\nimport DashboardLayout from \"../../components/Dashboard/DashboardLayout\";\n\nconst Configuracion = () => {\n  const { currentUser } = useAuth();\n  const [activeTab, setActiveTab] = useState(\"perfil\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  const tabs = [\n    { id: \"perfil\", label: \"Perfil\", icon: \"fas fa-user\" },\n    { id: \"preferencias\", label: \"Preferencias\", icon: \"fas fa-sliders-h\" },\n    { id: \"notificaciones\", label: \"Notificaciones\", icon: \"fas fa-bell\" },\n    { id: \"seguridad\", label: \"Seguridad\", icon: \"fas fa-shield-alt\" },\n  ];\n\n  const handleProfileUpdate = async () => {\n    if (!currentUser) return;\n\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const nombreInput = document.getElementById('nombre');\n      const nombre = nombreInput?.value.trim();\n      if (nombre && nombre !== currentUser.nombre) {\n        // Update user profile via API\n        const { data, error } = await apiService.updateProfile({ nombre });\n        if (error) throw new Error(error.message);\n\n        setSuccess('Perfil actualizado correctamente');\n      } else {\n        setSuccess('No hay cambios para guardar');\n      }\n    } catch (err) {\n      setError('Error al actualizar el perfil: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <DashboardLayout title=\"Configuración\" subtitle=\"Administra tu perfil y preferencias de la plataforma\">\n      <section className=\"px-4 md:px-6 py-6\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Tabs */}\n          <div className=\"bg-white/80 backdrop-blur rounded-xl border border-gray-200 shadow-sm p-2 flex overflow-auto\">\n            {tabs.map((t) => (\n              <button\n                key={t.id}\n                onClick={() => setActiveTab(t.id)}\n                className={`flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-all whitespace-nowrap mr-2 ${\n                  activeTab === t.id\n                    ? \"bg-blue-50 text-blue-700 ring-1 ring-blue-100\"\n                    : \"text-gray-700 hover:bg-gray-50\"\n                }`}\n              >\n                <i className={`${t.icon} text-sm`}></i>\n                {t.label}\n              </button>\n            ))}\n          </div>\n\n          {/* Content */}\n          <div className=\"mt-6 grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2 space-y-6\">\n              {activeTab === \"perfil\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Datos de perfil</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Nombre</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2\"\n                        defaultValue={currentUser?.user_metadata?.full_name || currentUser?.nombre || ''}\n                        id=\"nombre\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Correo</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2\"\n                        value={currentUser?.email || ''}\n                        readOnly\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Rol</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2 bg-gray-100\"\n                        value={currentUser?.rol || ''}\n                        readOnly\n                      />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                      <label className=\"block text-sm text-gray-600 mb-1\">Sede</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2\"\n                        defaultValue={currentUser?.sede_nombre || 'No asignada'}\n                        readOnly\n                      />\n                    </div>\n                  </div>\n                  <div className=\"mt-4\">\n                    <button\n                      onClick={handleProfileUpdate}\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      disabled={loading}\n                    >\n                      {loading ? 'Guardando...' : 'Guardar cambios'}\n                    </button>\n                    {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n                    {success && <p className=\"text-green-500 text-sm mt-2\">{success}</p>}\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"preferencias\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Preferencias</h2>\n                  <div className=\"space-y-4\">\n                    <label className=\"flex items-center gap-3\">\n                      <input type=\"checkbox\" className=\"form-checkbox\" />\n                      Modo compacto de tablas\n                    </label>\n                    <label className=\"flex items-center gap-3\">\n                      <input type=\"checkbox\" className=\"form-checkbox\" />\n                      Mostrar ayudas contextuales\n                    </label>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"notificaciones\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Notificaciones</h2>\n                  <div className=\"space-y-4\">\n                    <label className=\"flex items-center justify-between\">\n                      <span>Recordatorios de mensualidades</span>\n                      <input type=\"checkbox\" className=\"form-switch\" />\n                    </label>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"seguridad\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Seguridad</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"md:col-span-2\">\n                      <label className=\"block text-sm text-gray-600 mb-1\">Contraseña actual</label>\n                      <input type=\"password\" className=\"w-full border rounded-lg px-3 py-2\" />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Nueva contraseña</label>\n                      <input type=\"password\" className=\"w-full border rounded-lg px-3 py-2\" />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Confirmar nueva contraseña</label>\n                      <input type=\"password\" className=\"w-full border rounded-lg px-3 py-2\" />\n                    </div>\n                  </div>\n                  <div className=\"mt-4\">\n                    <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">Actualizar contraseña</button>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <aside className=\"space-y-6\">\n              <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">Consejos de seguridad</h3>\n                <ul className=\"list-disc pl-5 text-sm text-gray-600 space-y-1\">\n                  <li>Usa contraseñas fuertes y únicas.</li>\n                  <li>Activa la verificación en dos pasos si está disponible.</li>\n                  <li>Revisa periódicamente tus dispositivos activos.</li>\n                </ul>\n              </div>\n              <div className=\"bg-blue-50 border border-blue-100 rounded-xl p-4\">\n                <p className=\"text-sm text-blue-800\">\n                  ¿Necesitas ayuda? Contacta al equipo de soporte para asistencia personalizada.\n                </p>\n              </div>\n            </aside>\n          </div>\n        </div>\n      </section>\n    </DashboardLayout>\n  );\n};\n\nexport default Configuracion;","/Users/todoporunalma/Desktop/coptua_react/src/pages/Contact/Contact.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Participantes.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Home/Home.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/NotFound/NotFound.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Header/Header.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Login/Login.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Donate/Donate.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/PrivateRoute/PrivateRoute.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/About/About.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Dashboard/Finance.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/pages/Programs/Programs.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/services/databaseService.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/services/storageService.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/hooks/useSidebar.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Dashboard/Sidebar.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/UI/GradientText.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Dashboard/DashboardHeader.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/UI/LoadingSpinner.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/VisitorCounter/VisitorCounterMobile.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/VisitorCounter/VisitorCounter.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/SEO/SEO.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/CustomerReviews/CustomerReviews.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Feature/Feature.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/HappyCustomers/HappyCustomers.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Menu/Menu.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Breadcrumbs/Breadcrumbs.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/TransformationStories/TransformationStories.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Dashboard/DashboardLayout.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Banner/Banner.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/hooks/useVisitorCounter.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/CustomerReviews/Review.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Feature/FeatureItem.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/services/visitorCounterService.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/hooks/useDebouncedSearch.js",[],"/Users/todoporunalma/Desktop/coptua_react/src/components/Common/LoadingSpinner.jsx",[],"/Users/todoporunalma/Desktop/coptua_react/src/services/apiService.js",["384"],"// Servicio API para comunicación con Spring Boot Backend\nimport axios from 'axios';\n\n// Configuración base de la API\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\n\n// Crear instancia de axios con configuración base\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para agregar token de autenticación\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para manejar respuestas y errores\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Manejar errores de autenticación\n    if (error.response?.status === 401) {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n      window.location.href = '/login';\n    }\n    \n    // Manejar errores de red\n    if (!error.response) {\n      console.error('Error de red:', error.message);\n      return Promise.reject({\n        message: 'Error de conexión con el servidor',\n        status: 0\n      });\n    }\n    \n    return Promise.reject(error.response.data || error);\n  }\n);\n\n// Definición de roles del sistema\nexport const ROLES = {\n  CONSULTA: 'CONSULTA',\n  ADMINISTRADOR: 'ADMINISTRADOR'\n};\n\nclass ApiService {\n  // ==================== AUTENTICACIÓN ====================\n  \n  // Iniciar sesión\n  async login(email, password) {\n    try {\n      const response = await apiClient.post('/auth/login', {\n        email,\n        password\n      });\n      \n      const { token, user } = response.data;\n      \n      // Guardar token y usuario en localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      \n      return { data: { user, token }, error: null };\n    } catch (error) {\n      console.error('Error en login:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al iniciar sesión' \n        } \n      };\n    }\n  }\n\n  // Cerrar sesión\n  async logout() {\n    try {\n      await apiClient.post('/auth/logout');\n      \n      // Limpiar localStorage\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n      \n      return { success: true, error: null };\n    } catch (error) {\n      console.error('Error en logout:', error);\n      // Limpiar localStorage aunque falle la petición\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n      return { success: true, error: null };\n    }\n  }\n\n\n  // Restablecer contraseña\n  async resetPassword(email) {\n    try {\n      const response = await apiClient.post('/auth/reset-password', { email });\n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error('Error en reset password:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al restablecer contraseña' \n        } \n      };\n    }\n  }\n\n  // Obtener usuario actual\n  async getCurrentUser() {\n    try {\n      const storedUser = localStorage.getItem('currentUser');\n      if (storedUser) {\n        const user = JSON.parse(storedUser);\n        // Verificar que el token siga siendo válido\n        const response = await apiClient.get('/auth/me');\n        return { data: response.data, error: null };\n      }\n      return { data: null, error: null };\n    } catch (error) {\n      console.error('Error obteniendo usuario actual:', error);\n      return { data: null, error };\n    }\n  }\n\n  // Actualizar perfil de usuario\n  async updateProfile(profileData) {\n    try {\n      const response = await apiClient.put('/auth/profile', profileData);\n      \n      // Actualizar usuario en localStorage\n      const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n      const updatedUser = { ...currentUser, ...response.data };\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error('Error actualizando perfil:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al actualizar perfil' \n        } \n      };\n    }\n  }\n\n  // Verificar permisos del usuario\n  async hasPermission(requiredRole) {\n    try {\n      const { data: user } = await this.getCurrentUser();\n      \n      if (!user) return false;\n\n      const userRole = user.rol || ROLES.CONSULTA;\n      \n      // Jerarquía de roles: ADMINISTRADOR > CONSULTA\n      const roleHierarchy = {\n        [ROLES.ADMINISTRADOR]: 2,\n        [ROLES.CONSULTA]: 1\n      };\n\n      const userLevel = roleHierarchy[userRole] || 1;\n      const requiredLevel = roleHierarchy[requiredRole] || 1;\n\n      return userLevel >= requiredLevel;\n    } catch (error) {\n      console.error('Error verificando permisos:', error);\n      return false;\n    }\n  }\n\n  // ==================== DASHBOARD ====================\n  \n  // Obtener datos del dashboard\n  async getDashboardData() {\n    try {\n      const response = await apiClient.get('/dashboard/stats');\n      return { \n        data: response.data, \n        error: null \n      };\n    } catch (error) {\n      console.error('Error obteniendo datos del dashboard:', error);\n      return { \n        data: { participantes: 0, mensualidades: 0 }, \n        error \n      };\n    }\n  }\n\n  // ==================== PARTICIPANTES ====================\n  \n  // Obtener participantes\n  async getParticipantes() {\n    try {\n      const response = await apiClient.get('/participantes');\n      return { data: response.data || [], error: null };\n    } catch (error) {\n      console.error('Error obteniendo participantes:', error);\n      return { \n        data: [], \n        error: { message: 'Error al cargar participantes' } \n      };\n    }\n  }\n\n  // Crear nuevo participante\n  async createParticipante(participanteData) {\n    try {\n      // Validar datos requeridos\n      if (!participanteData.nombre || !participanteData.email) {\n        return { \n          data: null, \n          error: { message: 'Nombre y email son campos obligatorios' } \n        };\n      }\n\n      const response = await apiClient.post('/participantes', participanteData);\n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error('Error creando participante:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al crear participante' \n        } \n      };\n    }\n  }\n\n  // Actualizar participante\n  async updateParticipante(id, participanteData) {\n    try {\n      if (!id) {\n        return { \n          data: null, \n          error: { message: 'ID de participante requerido' } \n        };\n      }\n\n      const response = await apiClient.put(`/participantes/${id}`, participanteData);\n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error('Error actualizando participante:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al actualizar participante' \n        } \n      };\n    }\n  }\n\n  // Eliminar participante\n  async deleteParticipante(id) {\n    try {\n      await apiClient.delete(`/participantes/${id}`);\n      return { error: null };\n    } catch (error) {\n      console.error('Error eliminando participante:', error);\n      return { \n        error: { \n          message: error.message || 'Error al eliminar participante' \n        } \n      };\n    }\n  }\n\n  // ==================== MENSUALIDADES ====================\n  \n  // Obtener mensualidades\n  async getMensualidades() {\n    try {\n      const response = await apiClient.get('/mensualidades');\n      return { data: response.data || [], error: null };\n    } catch (error) {\n      console.error('Error obteniendo mensualidades:', error);\n      return { \n        data: [], \n        error: { message: 'Error al cargar mensualidades' } \n      };\n    }\n  }\n\n  // Crear nueva mensualidad\n  async createMensualidad(mensualidadData) {\n    try {\n      if (!mensualidadData.participante_id || !mensualidadData.valor) {\n        return { \n          data: null, \n          error: { message: 'Participante y valor son campos obligatorios' } \n        };\n      }\n\n      const response = await apiClient.post('/mensualidades', mensualidadData);\n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error('Error creando mensualidad:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al crear mensualidad' \n        } \n      };\n    }\n  }\n\n  // Actualizar mensualidad\n  async updateMensualidad(id, mensualidadData) {\n    try {\n      if (!id) {\n        return { \n          data: null, \n          error: { message: 'ID de mensualidad requerido' } \n        };\n      }\n\n      const response = await apiClient.put(`/mensualidades/${id}`, mensualidadData);\n      return { data: response.data, error: null };\n    } catch (error) {\n      console.error('Error actualizando mensualidad:', error);\n      return { \n        data: null, \n        error: { \n          message: error.message || 'Error al actualizar mensualidad' \n        } \n      };\n    }\n  }\n\n  // ==================== SEDES ====================\n  \n  // Obtener sedes\n  async getSedes() {\n    try {\n      const response = await apiClient.get('/sedes');\n      return { data: response.data || [], error: null };\n    } catch (error) {\n      console.error('Error obteniendo sedes:', error);\n      return { \n        data: [], \n        error: { message: 'Error al cargar sedes' } \n      };\n    }\n  }\n\n  // ==================== UTILIDADES ====================\n  \n  // Verificar conexión con la API\n  async testConnection() {\n    try {\n      const response = await apiClient.get('/health');\n      console.log('✅ Conexión con API exitosa');\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('❌ Error de conexión con API:', error.message);\n      return { \n        success: false, \n        error: error.message || 'Error de conexión' \n      };\n    }\n  }\n\n  // Obtener configuración de la API\n  getApiConfig() {\n    return {\n      baseURL: API_BASE_URL,\n      hasToken: !!localStorage.getItem('authToken'),\n      environment: process.env.NODE_ENV,\n      isConfigured: !!API_BASE_URL\n    };\n  }\n}\n\n// Exportar instancia única del servicio\nexport const apiService = new ApiService();\nexport default apiService;\n\n// Exportar cliente axios para uso directo si es necesario\nexport { apiClient };\n","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/index.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/App.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/reportWebVitals.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/contexts/SidebarContext.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/contexts/AuthContext.jsx",["385"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { api, ROLES } from \"../services/api\";\nconst AuthContext = createContext();\n\n// Make useAuth\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start - SOLO localStorage\n    const initializeAuth = () => {\n      setLoading(true);\n      try {\n        console.log('🔄 Inicializando autenticación desde localStorage...');\n        \n        const storedUser = localStorage.getItem('currentUser');\n        const storedToken = localStorage.getItem('authToken');\n        \n        console.log('🔍 Estado localStorage:', { \n          hasUser: !!storedUser, \n          hasToken: !!storedToken,\n          userLength: storedUser?.length,\n          tokenLength: storedToken?.length\n        });\n        \n        if (storedUser && storedToken) {\n          try {\n            const user = JSON.parse(storedUser);\n            console.log('👤 Usuario parseado:', user);\n            \n            // Verificar que el usuario tenga los campos mínimos necesarios\n            if (user && user.email && (user.id || user.userId)) {\n              setCurrentUser(user);\n              console.log('✅ Usuario restaurado exitosamente:', user.email);\n            } else {\n              console.warn('⚠️ Usuario incompleto en localStorage:', user);\n              setCurrentUser(null);\n              localStorage.removeItem('authToken');\n              localStorage.removeItem('currentUser');\n            }\n          } catch (parseError) {\n            console.error('❌ Error parseando usuario:', parseError);\n            setCurrentUser(null);\n            localStorage.removeItem('authToken');\n            localStorage.removeItem('currentUser');\n          }\n        } else {\n          console.log('❌ No hay datos de sesión en localStorage');\n          setCurrentUser(null);\n        }\n      } catch (error) {\n        console.error('❌ Error inicializando auth:', error);\n        setCurrentUser(null);\n      } finally {\n        setLoading(false);\n        console.log('✅ Inicialización de auth completada');\n      }\n    };\n\n    // Ejecutar sincrónicamente - no async\n    initializeAuth();\n  }, []);\n\n\n  // User login using email password\n  const login = async (email, password) => {\n    try {\n      console.log('🔄 Iniciando login...');\n      const { data, error } = await api.login(email, password);\n\n      if (error) {\n        console.error('❌ Error en login:', error);\n        throw error;\n      }\n\n      console.log('✅ Login exitoso, datos recibidos:', data);\n      \n      // Asegurar que el usuario se guarde en el estado\n      setCurrentUser(data.user);\n      \n      // Verificar que se guardó en localStorage\n      const savedUser = localStorage.getItem('currentUser');\n      const savedToken = localStorage.getItem('authToken');\n      \n      console.log('🔍 Verificación post-login:', {\n        userInState: !!data.user,\n        userInLocalStorage: !!savedUser,\n        tokenInLocalStorage: !!savedToken\n      });\n      \n      return { user: data.user };\n    } catch (error) {\n      console.error('❌ Error durante login:', error);\n      throw error;\n    }\n  };\n\n  // User logout\n  const logout = async () => {\n    try {\n      console.log('🔄 Cerrando sesión...');\n      // Limpiar estado local primero\n      setCurrentUser(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n      \n      // Intentar notificar al servidor (opcional)\n      try {\n        await api.logout();\n      } catch (logoutError) {\n        console.warn('⚠️ Error notificando logout al servidor:', logoutError);\n        // No es crítico si falla\n      }\n      \n      console.log('✅ Sesión cerrada correctamente');\n      return { success: true };\n    } catch (error) {\n      console.error('❌ Error durante logout:', error);\n      // Asegurar limpieza incluso si hay error\n      setCurrentUser(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n      throw error;\n    }\n  };\n\n\n  // forget Password\n  const forgetPassword = async (email) => {\n    const { error } = await api.resetPassword(email);\n    if (error) throw error;\n    return { success: true };\n  };\n\n\n  // Context values\n  const value = {\n    currentUser,\n    logout,\n    login,\n    forgetPassword,\n    loading,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Footer.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/auth/ProtectedRoute.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Contact/Contact.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Finance.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Formatos.jsx",["386"],"import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport DashboardLayout from '../../components/layout/DashboardLayout';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport { useDropzone } from 'react-dropzone';\nimport { storage } from '../../services/storage';\nimport { dbService, ROLES } from '../../services/database';\nimport { Link } from 'react-router-dom';\nimport { getFileType, formatFileSize, formatDate } from '../../utils/fileUtils';\n\nconst Formatos = () => {\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [renamingFolder, setRenamingFolder] = useState(null); // {folderName, newName}\n\n  // New state for enhanced functionality\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFileType, setSelectedFileType] = useState('all');\n  const [viewMode, setViewMode] = useState('list'); // 'list' or 'grid'\n  const [sortBy, setSortBy] = useState('createdAt'); // 'name', 'size', 'createdAt', 'type'\n  const [sortOrder, setSortOrder] = useState('desc'); // 'asc' or 'desc'\n\n  const navigateToPath = (targetPath) => {\n    loadFiles(targetPath);\n  };\n\n  // Simple notification helper\n  const addNotification = useCallback((message, type = 'info') => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, message, type }]);\n    setTimeout(() => setNotifications(prev => prev.filter(n => n.id !== id)), 5000);\n  }, []);\n\n  // Check admin permission on mount\n  useEffect(() => {\n    const checkAdmin = async () => {\n      try {\n        const admin = await dbService.hasPermission(ROLES.ADMINISTRADOR);\n        setIsAdmin(admin);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAdmin();\n  }, []);\n\n  // Load files and folders\n  const loadFiles = useCallback(async (path = '') => {\n    setLoading(true);\n    try {\n      console.log('🔄 Cargando archivos para path:', path);\n      const result = await storage.listFiles(path);\n      console.log('📊 Resultado listFiles:', result);\n      \n      const { files: loadedFiles, folders: loadedFolders } = result;\n      setFiles(loadedFiles || []);\n      setFolders(loadedFolders || []);\n      setCurrentPath(path);\n      \n      console.log('✅ Archivos cargados:', {\n        files: loadedFiles?.length || 0,\n        folders: loadedFolders?.length || 0,\n        path: path\n      });\n    } catch (error) {\n      console.error('❌ Error loading files:', error);\n      addNotification(`Error loading files: ${error.message}`, 'error');\n      setFiles([]);\n      setFolders([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [addNotification]);\n\n  useEffect(() => {\n    loadFiles();\n  }, [loadFiles]);\n\n  // Navigate to folder\n  const navigateToFolder = (folderName) => {\n    const newPath = currentPath ? `${currentPath}/${folderName}` : folderName;\n    loadFiles(newPath);\n  };\n\n\n  // Navigate to specific path prefix for breadcrumb\n  const handleBreadcrumbClick = (pathPrefix) => {\n    navigateToPath(pathPrefix);\n  };\n\n  // Create folder\n  const handleCreateFolder = async () => {\n    if (!isAdmin || !newFolderName.trim()) return;\n    try {\n      await storage.createFolder(newFolderName.trim(), currentPath);\n      addNotification('Folder created successfully', 'success');\n      setNewFolderName('');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error creating folder: ${error.message}`, 'error');\n    }\n  };\n\n  // Handle rename for specific folder\n  const handleRenameFolder = async (oldName) => {\n    if (!isAdmin || !renamingFolder || !renamingFolder.newName.trim()) return;\n    try {\n      await storage.renameFolder(oldName, renamingFolder.newName.trim(), currentPath);\n      addNotification('Folder renamed successfully', 'success');\n      setRenamingFolder(null);\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error renaming folder: ${error.message}`, 'error');\n      setRenamingFolder(null);\n    }\n  };\n\n  const startRename = (folder) => {\n    setRenamingFolder({ folderName: folder, newName: folder });\n  };\n\n  const cancelRename = () => {\n    setRenamingFolder(null);\n  };\n\n  const updateRenameName = (newName) => {\n    setRenamingFolder(prev => ({ ...prev, newName }));\n  };\n\n  // Delete folder\n  const handleDeleteFolder = async (folderName) => {\n    if (!isAdmin || !window.confirm(`Delete folder '${folderName}' and all contents?`)) return;\n    try {\n      await storage.deleteFolder(currentPath ? `${currentPath}/${folderName}` : folderName);\n      addNotification('Folder deleted successfully', 'success');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error deleting folder: ${error.message}`, 'error');\n    }\n  };\n\n  // Delete file\n  const handleDeleteFile = async (fileName) => {\n    if (!isAdmin || !window.confirm(`Delete file '${fileName}'?`)) return;\n    try {\n      const fullPath = currentPath ? `${currentPath}/${fileName}` : fileName;\n      await storage.deleteFile(fullPath);\n      addNotification('File deleted successfully', 'success');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error deleting file: ${error.message}`, 'error');\n    }\n  };\n\n  // Download file\n  const handleDownload = async (fileName) => {\n    try {\n      const fullPath = currentPath ? `${currentPath}/${fileName}` : fileName;\n      const url = await storage.getDownloadUrl(fullPath);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      a.click();\n    } catch (error) {\n      addNotification(`Error downloading file: ${error.message}`, 'error');\n    }\n  };\n\n  // Upload files\n  const onDrop = async (acceptedFiles) => {\n    if (!isAdmin) {\n      addNotification('Permission denied: Admin access required for uploads', 'error');\n      return;\n    }\n\n    setUploading(true);\n    try {\n      for (const file of acceptedFiles) {\n        await storage.upload(file, currentPath);\n      }\n      addNotification(`${acceptedFiles.length} files uploaded successfully`, 'success');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Upload error: ${error.message}`, 'error');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // Filtered and sorted files\n  const filteredAndSortedFiles = useMemo(() => {\n    let filtered = files.filter(file => {\n      const matchesSearch = file.nombre.toLowerCase().includes(searchTerm.toLowerCase());\n      const fileType = getFileType(file.nombre);\n      const matchesType = selectedFileType === 'all' || fileType.category === selectedFileType;\n      return matchesSearch && matchesType;\n    });\n\n    return filtered.sort((a, b) => {\n      let aValue, bValue;\n\n      switch (sortBy) {\n        case 'name':\n          aValue = a.nombre.toLowerCase();\n          bValue = b.nombre.toLowerCase();\n          break;\n        case 'size':\n          aValue = a.tamaño || 0;\n          bValue = b.tamaño || 0;\n          break;\n        case 'createdAt':\n          aValue = new Date(a.createdAt || 0);\n          bValue = new Date(b.createdAt || 0);\n          break;\n        case 'type':\n          aValue = getFileType(a.nombre).category;\n          bValue = getFileType(b.nombre).category;\n          break;\n        default:\n          aValue = a.nombre.toLowerCase();\n          bValue = b.nombre.toLowerCase();\n      }\n\n      if (sortOrder === 'desc') {\n        return aValue < bValue ? 1 : -1;\n      }\n      return aValue > bValue ? 1 : -1;\n    });\n  }, [files, searchTerm, selectedFileType, sortBy, sortOrder]);\n\n  // File type options for filter\n  const fileTypeOptions = [\n    { value: 'all', label: 'Todos los tipos', icon: 'fas fa-file' },\n    { value: 'document', label: 'Documentos', icon: 'fas fa-file-alt' },\n    { value: 'image', label: 'Imágenes', icon: 'fas fa-image' },\n    { value: 'video', label: 'Videos', icon: 'fas fa-video' },\n    { value: 'audio', label: 'Audio', icon: 'fas fa-music' },\n    { value: 'archive', label: 'Archivos', icon: 'fas fa-archive' },\n    { value: 'code', label: 'Código', icon: 'fas fa-code' },\n  ];\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: { '*/*': [] }, // All types\n    maxSize: 100 * 1024 * 1024, // 100MB\n    multiple: true,\n    disabled: !isAdmin || uploading,\n  });\n\n  if (loading) {\n    return (\n      <DashboardLayout\n        title=\"Formatos\"\n        subtitle=\"Cargando archivos...\"\n        loading={true}\n        loadingText=\"Cargando formatos y carpetas...\"\n      >\n        <LoadingSpinner />\n      </DashboardLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout\n        title=\"Formatos\"\n        subtitle=\"Error al cargar datos\"\n        loading={false}\n      >\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading formats: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (!isAdmin && loading === false) {\n    return (\n      <DashboardLayout\n        title=\"Formatos\"\n        subtitle=\"Acceso Restringido\"\n        loading={false}\n      >\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center\">\n            <i className=\"fas fa-lock text-yellow-500 text-3xl mb-4\"></i>\n            <h3 className=\"text-lg font-bold text-yellow-800 mb-2\">Acceso Restringido</h3>\n            <p className=\"text-yellow-700\">Solo administradores pueden gestionar archivos.</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout\n      title=\"Formatos\"\n      subtitle=\"Gestión de Archivos y Carpetas\"\n    >\n      \n      {/* Simple Toast Notifications */}\n      <div className=\"fixed top-20 right-4 z-50 space-y-2 max-w-sm\">\n        {notifications.map(({ id, message, type }) => (\n          <div\n            key={id}\n            className={`p-4 rounded-lg shadow-lg text-white animate-slide-in-right ${\n              type === 'success' ? 'bg-green-500' :\n              type === 'error' ? 'bg-red-500' :\n              type === 'warning' ? 'bg-yellow-500' : 'bg-blue-500'\n            }`}\n          >\n            {message}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"px-6 py-6\">\n        {/* Breadcrumb */}\n        <div className=\"mb-6\">\n          <nav className=\"flex items-center space-x-2 text-sm text-gray-600\">\n            <Link to=\"/dashboard\" className=\"hover:text-blue-600\">Dashboard</Link>\n            <span>/</span>\n            <span className=\"flex items-center space-x-1\">\n              {currentPath.split('/').map((part, i) => {\n                const pathPrefix = currentPath.split('/').slice(0, i + 1).join('/');\n                return (\n                  <span key={i} className=\"flex items-center\">\n                    <button\n                      onClick={() => handleBreadcrumbClick(pathPrefix)}\n                      className=\"hover:text-blue-600 font-medium\"\n                    >\n                      {part}\n                    </button>\n                    {i < currentPath.split('/').length - 1 && <span>/</span>}\n                  </span>\n                );\n              })}\n              {!currentPath && <span className=\"font-medium\">Raíz</span>}\n            </span>\n          </nav>\n        </div>\n\n        {/* Search and Filter Controls */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6 border border-gray-100\">\n          <div className=\"flex flex-col lg:flex-row gap-4 items-start lg:items-center justify-between\">\n            {/* Search */}\n            <div className=\"flex-1 max-w-md\">\n              <div className=\"relative\">\n                <i className=\"fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"></i>\n                <input\n                  type=\"text\"\n                  placeholder=\"Buscar archivos...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            {/* Filters */}\n            <div className=\"flex flex-wrap gap-3 items-center\">\n              {/* File Type Filter */}\n              <div className=\"relative\">\n                <select\n                  value={selectedFileType}\n                  onChange={(e) => setSelectedFileType(e.target.value)}\n                  className=\"appearance-none bg-white border border-gray-300 rounded-lg px-4 py-2 pr-8 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  {fileTypeOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n                <i className=\"fas fa-chevron-down absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none\"></i>\n              </div>\n\n              {/* Sort By */}\n              <div className=\"relative\">\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"appearance-none bg-white border border-gray-300 rounded-lg px-4 py-2 pr-8 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"createdAt\">Fecha</option>\n                  <option value=\"name\">Nombre</option>\n                  <option value=\"size\">Tamaño</option>\n                  <option value=\"type\">Tipo</option>\n                </select>\n                <i className=\"fas fa-chevron-down absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none\"></i>\n              </div>\n\n              {/* Sort Order */}\n              <button\n                onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\n                className=\"p-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                title={`Ordenar ${sortOrder === 'asc' ? 'descendente' : 'ascendente'}`}\n              >\n                <i className={`fas fa-sort-amount-${sortOrder === 'asc' ? 'up' : 'down'} text-gray-600`}></i>\n              </button>\n\n              {/* View Mode Toggle */}\n              <div className=\"flex border border-gray-300 rounded-lg overflow-hidden\">\n                <button\n                  onClick={() => setViewMode('list')}\n                  className={`px-3 py-2 ${viewMode === 'list' ? 'bg-blue-500 text-white' : 'bg-white text-gray-600 hover:bg-gray-50'} transition-colors`}\n                  title=\"Vista de lista\"\n                >\n                  <i className=\"fas fa-list\"></i>\n                </button>\n                <button\n                  onClick={() => setViewMode('grid')}\n                  className={`px-3 py-2 ${viewMode === 'grid' ? 'bg-blue-500 text-white' : 'bg-white text-gray-600 hover:bg-gray-50'} transition-colors`}\n                  title=\"Vista de cuadrícula\"\n                >\n                  <i className=\"fas fa-th\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Results Summary */}\n          <div className=\"mt-4 text-sm text-gray-600\">\n            {filteredAndSortedFiles.length} archivo{filteredAndSortedFiles.length !== 1 ? 's' : ''} encontrado{filteredAndSortedFiles.length !== 1 ? 's' : ''}\n            {searchTerm && ` para \"${searchTerm}\"`}\n            {selectedFileType !== 'all' && ` de tipo ${fileTypeOptions.find(opt => opt.value === selectedFileType)?.label.toLowerCase()}`}\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Folders Section */}\n          <div className=\"lg:col-span-1 bg-white rounded-2xl shadow-lg p-6 border border-gray-100\">\n            <h3 className=\"text-lg font-bold text-gray-800 mb-4\">Carpetas</h3>\n            \n            {/* Create Folder */}\n            {isAdmin && (\n              <div className=\"mb-4 p-3 bg-blue-50 rounded-xl\">\n                <input\n                  type=\"text\"\n                  value={newFolderName}\n                  onChange={(e) => setNewFolderName(e.target.value)}\n                  placeholder=\"Nombre de nueva carpeta\"\n                  className=\"w-full p-2 border border-gray-300 rounded-lg mb-2\"\n                />\n                <button\n                  onClick={handleCreateFolder}\n                  className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700\"\n                >\n                  Crear Carpeta\n                </button>\n              </div>\n            )}\n\n            {/* Folders List */}\n            <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n              {folders.map((folder) => (\n                <div key={folder} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-lg\">\n                  <button\n                    onClick={() => navigateToFolder(folder)}\n                    className=\"flex-1 text-left hover:bg-gray-100 p-2 rounded\"\n                  >\n                    <i className=\"fas fa-folder mr-2 text-yellow-500\"></i>\n                    {renamingFolder?.folderName === folder ? (\n                      <input\n                        type=\"text\"\n                        value={renamingFolder.newName}\n                        onChange={(e) => updateRenameName(e.target.value)}\n                        onBlur={() => {\n                          if (renamingFolder.newName.trim()) {\n                            handleRenameFolder(folder);\n                          } else {\n                            cancelRename();\n                          }\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter') {\n                            handleRenameFolder(folder);\n                          } else if (e.key === 'Escape') {\n                            cancelRename();\n                          }\n                        }}\n                        autoFocus\n                        className=\"bg-transparent border-b border-blue-500 px-1\"\n                      />\n                    ) : (\n                      folder\n                    )}\n                  </button>\n                  {isAdmin && (\n                    <div className=\"flex space-x-1\">\n                      {renamingFolder?.folderName === folder ? (\n                        <div className=\"flex space-x-1\">\n                          <button\n                            onClick={() => handleRenameFolder(folder)}\n                            className=\"text-green-600 hover:text-green-800\"\n                            title=\"Guardar\"\n                          >\n                            <i className=\"fas fa-check\"></i>\n                          </button>\n                          <button\n                            onClick={cancelRename}\n                            className=\"text-gray-600 hover:text-gray-800\"\n                            title=\"Cancelar\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </button>\n                        </div>\n                      ) : (\n                        <>\n                          <button\n                            onClick={() => startRename(folder)}\n                            className=\"text-blue-600 hover:text-blue-800\"\n                            title=\"Renombrar\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </button>\n                          <button\n                            onClick={() => handleDeleteFolder(folder)}\n                            className=\"text-red-600 hover:text-red-800\"\n                            title=\"Eliminar\"\n                          >\n                            <i className=\"fas fa-trash\"></i>\n                          </button>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n              {folders.length === 0 && (\n                <p className=\"text-gray-500 text-center py-4\">No hay carpetas</p>\n              )}\n            </div>\n          </div>\n\n          {/* Files Section */}\n          <div className=\"lg:col-span-2\">\n            {/* Upload Zone */}\n            {isAdmin && (\n              <div\n                {...getRootProps()}\n                className={`border-2 border-dashed rounded-2xl p-8 mb-6 text-center transition-colors ${\n                  isDragActive ? 'border-blue-400 bg-blue-50' : 'border-gray-300'\n                } ${uploading ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n              >\n                <input {...getInputProps()} />\n                {uploading ? (\n                  <LoadingSpinner size=\"md\" text=\"Subiendo...\" />\n                ) : (\n                  <>\n                    <i className={`fas fa-cloud-upload-alt text-4xl ${isDragActive ? 'text-blue-500' : 'text-gray-400'} mb-4`}></i>\n                    <p className=\"text-lg font-medium mb-2\">\n                      {isDragActive ? 'Suelta los archivos aquí...' : 'Arrastra archivos aquí o haz clic para seleccionar'}\n                    </p>\n                    <p className=\"text-sm text-gray-500 mb-4\">Soporta todos los tipos de archivos (máx. 100MB cada uno)</p>\n                    <button type=\"button\" className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700\">\n                      Seleccionar Archivos\n                    </button>\n                  </>\n                )}\n              </div>\n            )}\n            {!isAdmin && (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-2xl p-6 mb-6 text-center\">\n                <i className=\"fas fa-lock text-yellow-500 text-3xl mb-4\"></i>\n                <h3 className=\"text-lg font-bold text-yellow-800 mb-2\">Acceso Restringido</h3>\n                <p className=\"text-yellow-700\">Solo administradores pueden subir y eliminar archivos.</p>\n              </div>\n            )}\n\n            {/* Files Display */}\n            <div className=\"bg-white rounded-2xl shadow-lg overflow-hidden\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h3 className=\"text-lg font-bold text-gray-800\">\n                  Archivos ({filteredAndSortedFiles.length}{files.length !== filteredAndSortedFiles.length ? ` de ${files.length}` : ''})\n                </h3>\n              </div>\n\n              {loading ? (\n                <div className=\"p-6\">\n                  <LoadingSpinner size=\"md\" />\n                </div>\n              ) : filteredAndSortedFiles.length === 0 ? (\n                <div className=\"p-12 text-center text-gray-500\">\n                  <i className=\"fas fa-folder-open text-6xl mb-4 text-gray-300\"></i>\n                  <h3 className=\"text-lg font-medium mb-2\">\n                    {files.length === 0 ? 'No hay archivos' : 'No se encontraron archivos'}\n                  </h3>\n                  <p className=\"text-gray-400 mb-4\">\n                    {files.length === 0\n                      ? (currentPath ? 'Esta carpeta está vacía' : 'El directorio raíz está vacío')\n                      : 'Intenta ajustar los filtros de búsqueda'\n                    }\n                  </p>\n                  {isAdmin && files.length === 0 && (\n                    <p className=\"text-sm text-gray-400\">\n                      {currentPath ? 'Sube archivos o crea carpetas para organizar.' : 'Comienza creando carpetas o subiendo archivos.'}\n                    </p>\n                  )}\n                </div>\n              ) : viewMode === 'grid' ? (\n                /* Grid View */\n                <div className=\"p-6\">\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                    {filteredAndSortedFiles.map((file) => {\n                      const fileType = getFileType(file.nombre);\n                      const isImage = fileType.category === 'image';\n\n                      return (\n                        <div\n                          key={file.id}\n                          className=\"group relative bg-gray-50 rounded-xl border border-gray-200 hover:border-blue-300 hover:shadow-lg transition-all duration-200 overflow-hidden\"\n                        >\n                          {/* File Preview/Icon */}\n                          <div className=\"aspect-square flex items-center justify-center bg-white relative\">\n                            <i className={`${fileType.icon} ${fileType.color} text-3xl`}></i>\n\n                            {/* Hover overlay */}\n                            <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-200 flex items-center justify-center opacity-0 group-hover:opacity-100\">\n                              <div className=\"flex space-x-2\">\n                                <button\n                                  onClick={() => handleDownload(file.nombre)}\n                                  className=\"p-2 bg-white rounded-full shadow-lg hover:bg-gray-50 transition-colors\"\n                                  title=\"Descargar\"\n                                >\n                                  <i className=\"fas fa-download text-blue-600\"></i>\n                                </button>\n                                {isAdmin && (\n                                  <button\n                                    onClick={() => handleDeleteFile(file.nombre)}\n                                    className=\"p-2 bg-white rounded-full shadow-lg hover:bg-gray-50 transition-colors\"\n                                    title=\"Eliminar\"\n                                  >\n                                    <i className=\"fas fa-trash text-red-600\"></i>\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* File Info */}\n                          <div className=\"p-3\">\n                            <h4\n                              className=\"font-medium text-sm text-gray-900 truncate mb-1\"\n                              title={file.nombre}\n                            >\n                              {file.nombre}\n                            </h4>\n                            <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                              <span>{formatFileSize(file.tamaño)}</span>\n                              <span className={`inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium ${\n                                fileType.category === 'document' ? 'bg-blue-100 text-blue-800' :\n                                fileType.category === 'image' ? 'bg-purple-100 text-purple-800' :\n                                fileType.category === 'video' ? 'bg-red-100 text-red-800' :\n                                fileType.category === 'audio' ? 'bg-indigo-100 text-indigo-800' :\n                                fileType.category === 'archive' ? 'bg-yellow-100 text-yellow-800' :\n                                fileType.category === 'code' ? 'bg-green-100 text-green-800' :\n                                'bg-gray-100 text-gray-800'\n                              }`}>\n                                {file.nombre.split('.').pop()?.toUpperCase()}\n                              </span>\n                            </div>\n                            <div className=\"text-xs text-gray-400 mt-1\">\n                              {formatDate(file.createdAt)}\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ) : (\n                /* List View */\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tipo</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tamaño</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha</th>\n                        <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {filteredAndSortedFiles.map((file) => {\n                        const fileType = getFileType(file.nombre);\n\n                        return (\n                          <tr key={file.id} className=\"hover:bg-gray-50 transition-colors\">\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"flex items-center\">\n                                <i className={`${fileType.icon} ${fileType.color} mr-3 text-lg`}></i>\n                                <div>\n                                  <div className=\"font-medium text-gray-900 max-w-xs truncate\" title={file.nombre}>\n                                    {file.nombre}\n                                  </div>\n                                  <div className=\"text-sm text-gray-500\">\n                                    {file.nombre.split('.').pop()?.toUpperCase()} • {fileType.category}\n                                  </div>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                                fileType.category === 'document' ? 'bg-blue-100 text-blue-800' :\n                                fileType.category === 'image' ? 'bg-purple-100 text-purple-800' :\n                                fileType.category === 'video' ? 'bg-red-100 text-red-800' :\n                                fileType.category === 'audio' ? 'bg-indigo-100 text-indigo-800' :\n                                fileType.category === 'archive' ? 'bg-yellow-100 text-yellow-800' :\n                                fileType.category === 'code' ? 'bg-green-100 text-green-800' :\n                                'bg-gray-100 text-gray-800'\n                              }`}>\n                                {fileType.category}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {formatFileSize(file.tamaño)}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              <div>\n                                {formatDate(file.createdAt)}\n                              </div>\n                              <div className=\"text-xs text-gray-400\">\n                                {file.createdAt ? new Date(file.createdAt).toLocaleTimeString('es-ES', {\n                                  hour: '2-digit',\n                                  minute: '2-digit'\n                                }) : ''}\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                              <div className=\"flex items-center justify-end space-x-2\">\n                                <button\n                                  onClick={() => handleDownload(file.nombre)}\n                                  className=\"text-blue-600 hover:text-blue-800 p-1 rounded transition-colors\"\n                                  title=\"Descargar\"\n                                >\n                                  <i className=\"fas fa-download\"></i>\n                                </button>\n                                {isAdmin && (\n                                  <button\n                                    onClick={() => handleDeleteFile(file.nombre)}\n                                    className=\"text-red-600 hover:text-red-800 p-1 rounded transition-colors\"\n                                    title=\"Eliminar\"\n                                  >\n                                    <i className=\"fas fa-trash\"></i>\n                                  </button>\n                                )}\n                              </div>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default Formatos;","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/About/About.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Participantes.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Sedes.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Header.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Home/Home.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Donate/Donate.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Dashboard.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/NotFound/NotFound.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Programs/Programs.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Dashboard/Configuracion.jsx",["387","388"],"import React, { useState } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { api } from \"../../services/api\";\nimport { dbService } from \"../../services/database\";\nimport DashboardLayout from \"../../components/layout/DashboardLayout\";\n\nconst Configuracion = () => {\n  const { currentUser } = useAuth();\n  const [activeTab, setActiveTab] = useState(\"perfil\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  const tabs = [\n    { id: \"perfil\", label: \"Perfil\", icon: \"fas fa-user\" },\n    { id: \"preferencias\", label: \"Preferencias\", icon: \"fas fa-sliders-h\" },\n    { id: \"notificaciones\", label: \"Notificaciones\", icon: \"fas fa-bell\" },\n    { id: \"seguridad\", label: \"Seguridad\", icon: \"fas fa-shield-alt\" },\n  ];\n\n  const handleProfileUpdate = async () => {\n    if (!currentUser) return;\n\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const nombreInput = document.getElementById('nombre');\n      const nombre = nombreInput?.value.trim();\n      if (nombre && nombre !== currentUser.nombre) {\n        // Update user profile via API\n        const { data, error } = await api.updateProfile({ nombre });\n        if (error) throw new Error(error.message);\n\n        setSuccess('Perfil actualizado correctamente');\n      } else {\n        setSuccess('No hay cambios para guardar');\n      }\n    } catch (err) {\n      setError('Error al actualizar el perfil: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <DashboardLayout title=\"Configuración\" subtitle=\"Administra tu perfil y preferencias de la plataforma\">\n      <section className=\"px-4 md:px-6 py-6\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Tabs */}\n          <div className=\"bg-white/80 backdrop-blur rounded-xl border border-gray-200 shadow-sm p-2 flex overflow-auto\">\n            {tabs.map((t) => (\n              <button\n                key={t.id}\n                onClick={() => setActiveTab(t.id)}\n                className={`flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-all whitespace-nowrap mr-2 ${\n                  activeTab === t.id\n                    ? \"bg-blue-50 text-blue-700 ring-1 ring-blue-100\"\n                    : \"text-gray-700 hover:bg-gray-50\"\n                }`}\n              >\n                <i className={`${t.icon} text-sm`}></i>\n                {t.label}\n              </button>\n            ))}\n          </div>\n\n          {/* Content */}\n          <div className=\"mt-6 grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2 space-y-6\">\n              {activeTab === \"perfil\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Datos de perfil</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Nombre</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2\"\n                        defaultValue={currentUser?.user_metadata?.full_name || currentUser?.nombre || ''}\n                        id=\"nombre\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Correo</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2\"\n                        value={currentUser?.email || ''}\n                        readOnly\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Rol</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2 bg-gray-100\"\n                        value={currentUser?.rol || ''}\n                        readOnly\n                      />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                      <label className=\"block text-sm text-gray-600 mb-1\">Sede</label>\n                      <input\n                        className=\"w-full border rounded-lg px-3 py-2\"\n                        defaultValue={currentUser?.sede_nombre || 'No asignada'}\n                        readOnly\n                      />\n                    </div>\n                  </div>\n                  <div className=\"mt-4\">\n                    <button\n                      onClick={handleProfileUpdate}\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      disabled={loading}\n                    >\n                      {loading ? 'Guardando...' : 'Guardar cambios'}\n                    </button>\n                    {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n                    {success && <p className=\"text-green-500 text-sm mt-2\">{success}</p>}\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"preferencias\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Preferencias</h2>\n                  <div className=\"space-y-4\">\n                    <label className=\"flex items-center gap-3\">\n                      <input type=\"checkbox\" className=\"form-checkbox\" />\n                      Modo compacto de tablas\n                    </label>\n                    <label className=\"flex items-center gap-3\">\n                      <input type=\"checkbox\" className=\"form-checkbox\" />\n                      Mostrar ayudas contextuales\n                    </label>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"notificaciones\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Notificaciones</h2>\n                  <div className=\"space-y-4\">\n                    <label className=\"flex items-center justify-between\">\n                      <span>Recordatorios de mensualidades</span>\n                      <input type=\"checkbox\" className=\"form-switch\" />\n                    </label>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"seguridad\" && (\n                <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                  <h2 className=\"text-lg font-semibold mb-4\">Seguridad</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"md:col-span-2\">\n                      <label className=\"block text-sm text-gray-600 mb-1\">Contraseña actual</label>\n                      <input type=\"password\" className=\"w-full border rounded-lg px-3 py-2\" />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Nueva contraseña</label>\n                      <input type=\"password\" className=\"w-full border rounded-lg px-3 py-2\" />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-600 mb-1\">Confirmar nueva contraseña</label>\n                      <input type=\"password\" className=\"w-full border rounded-lg px-3 py-2\" />\n                    </div>\n                  </div>\n                  <div className=\"mt-4\">\n                    <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">Actualizar contraseña</button>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <aside className=\"space-y-6\">\n              <div className=\"bg-white rounded-xl border border-gray-200 shadow p-6\">\n                <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">Consejos de seguridad</h3>\n                <ul className=\"list-disc pl-5 text-sm text-gray-600 space-y-1\">\n                  <li>Usa contraseñas fuertes y únicas.</li>\n                  <li>Activa la verificación en dos pasos si está disponible.</li>\n                  <li>Revisa periódicamente tus dispositivos activos.</li>\n                </ul>\n              </div>\n              <div className=\"bg-blue-50 border border-blue-100 rounded-xl p-4\">\n                <p className=\"text-sm text-blue-800\">\n                  ¿Necesitas ayuda? Contacta al equipo de soporte para asistencia personalizada.\n                </p>\n              </div>\n            </aside>\n          </div>\n        </div>\n      </section>\n    </DashboardLayout>\n  );\n};\n\nexport default Configuracion;","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/pages/Login/Login.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/hooks/useSidebar.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/hooks/useDebouncedSearch.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/api.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/database.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/storage.js",["389"],"import { api, ROLES, apiClient } from './api';\nimport { dbService } from './database';\n\nclass StorageService {\n  async isAdmin() {\n    return await dbService.hasPermission(ROLES.ADMINISTRADOR);\n  }\n\n  async upload(file, path = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    if (file.size > 10 * 1024 * 1024) {\n      throw new Error('File size exceeds 10MB limit');\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('path', path || '');\n\n      const response = await apiClient.post('/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      return {\n        path: response.data.path,\n        publicUrl: response.data.url\n      };\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw new Error(error.response?.data?.message || 'Error al subir archivo');\n    }\n  }\n\n  async deleteFile(fullPath) {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    try {\n      await apiClient.delete(`/files/${encodeURIComponent(fullPath)}`);\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      throw new Error(error.response?.data?.message || 'Error al eliminar archivo');\n    }\n  }\n\n  async listFiles(path = '') {\n    try {\n      const response = await apiClient.get('/files', {\n        params: { path: path || '' }\n      });\n\n      return {\n        files: response.data.files || [],\n        folders: response.data.folders || []\n      };\n    } catch (error) {\n      console.error('Error listing files:', error);\n      throw new Error(error.response?.data?.message || 'Error al listar archivos');\n    }\n  }\n\n  async deleteFolder(path) {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    try {\n      await apiClient.delete(`/files/folder/${encodeURIComponent(path)}`);\n    } catch (error) {\n      console.error('Error deleting folder:', error);\n      throw new Error(error.response?.data?.message || 'Error al eliminar carpeta');\n    }\n  }\n\n  async createFolder(folderName, parentPath = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    try {\n      const response = await apiClient.post('/files/folder', {\n        name: folderName,\n        parentPath: parentPath || ''\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error('Error creating folder:', error);\n      throw new Error(error.response?.data?.message || 'Error al crear carpeta');\n    }\n  }\n\n  async renameFolder(oldName, newName, parentPath = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    try {\n      await apiClient.put('/files/folder/rename', {\n        oldName,\n        newName,\n        parentPath: parentPath || ''\n      });\n    } catch (error) {\n      console.error('Error renaming folder:', error);\n      throw new Error(error.response?.data?.message || 'Error al renombrar carpeta');\n    }\n  }\n\n  async getDownloadUrl(path) {\n    try {\n      const response = await apiClient.get(`/files/download-url/${encodeURIComponent(path)}`);\n      return response.data.url;\n    } catch (error) {\n      console.error('Error getting download URL:', error);\n      throw new Error(error.response?.data?.message || 'Error al obtener URL de descarga');\n    }\n  }\n}\n\nexport const storage = new StorageService();\nexport default storage;","/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/utils/fileUtils.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/DashboardLayout.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Menu.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/VisitorCounter.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/HappyCustomers.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/CustomerReviews.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/Feature.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/Banner.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/UI/GradientText.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/SEO.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/TransformationStories.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/VisitorCounterMobile.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/dashboard/Breadcrumbs.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/UI/LoadingSpinner.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/Common/LoadingSpinner.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/hooks/useVisitorCounter.js",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/DashboardHeader.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/FeatureItem.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/layout/Sidebar.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/components/features/landing/Review.jsx",[],"/Users/todoporunalma/Desktop/Corporacion_2.0/coptua_react/src/services/visitorCounter.js",[],{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":2,"column":22,"nodeType":"396","messageId":"397","endLine":2,"endColumn":27},{"ruleId":"394","severity":1,"message":"398","line":4,"column":10,"nodeType":"396","messageId":"397","endLine":4,"endColumn":19},{"ruleId":"394","severity":1,"message":"399","line":33,"column":17,"nodeType":"396","messageId":"397","endLine":33,"endColumn":21},{"ruleId":"394","severity":1,"message":"400","line":132,"column":15,"nodeType":"396","messageId":"397","endLine":132,"endColumn":19},{"ruleId":"394","severity":1,"message":"395","line":2,"column":15,"nodeType":"396","messageId":"397","endLine":2,"endColumn":20},{"ruleId":"394","severity":1,"message":"401","line":617,"column":29,"nodeType":"396","messageId":"397","endLine":617,"endColumn":36},{"ruleId":"394","severity":1,"message":"398","line":4,"column":10,"nodeType":"396","messageId":"397","endLine":4,"endColumn":19},{"ruleId":"394","severity":1,"message":"399","line":33,"column":17,"nodeType":"396","messageId":"397","endLine":33,"endColumn":21},{"ruleId":"394","severity":1,"message":"402","line":1,"column":10,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},"no-native-reassign",["403"],"no-negated-in-lhs",["404"],"no-unused-vars","'ROLES' is defined but never used.","Identifier","unusedVar","'dbService' is defined but never used.","'data' is assigned a value but never used.","'user' is assigned a value but never used.","'isImage' is assigned a value but never used.","'api' is defined but never used.","no-global-assign","no-unsafe-negation"]