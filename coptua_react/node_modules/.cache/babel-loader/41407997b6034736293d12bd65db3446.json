{"ast":null,"code":"/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store = {}) {\n  return {\n    getItem: key => {\n      return store[key] || null;\n    },\n    setItem: (key, value) => {\n      store[key] = value;\n    },\n    removeItem: key => {\n      delete store[key];\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/lib/local-storage.ts"],"names":[],"mappings":"AAEA;;;AAGG;AACH,OAAM,SAAU,yBAAyB,CAAC,KAAA,GAAmC,CAAA,CAAE,EAAA;EAC7E,OAAO;IACL,OAAO,EAAG,GAAG,IAAI;MACf,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI;IAC3B,CAAC;IAED,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,KAAI;MACtB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK;IACpB,CAAC;IAED,UAAU,EAAG,GAAG,IAAI;MAClB,OAAO,KAAK,CAAC,GAAG,CAAC;IACnB;GACD;AACH","sourceRoot":"","sourcesContent":["/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store = {}) {\n    return {\n        getItem: (key) => {\n            return store[key] || null;\n        },\n        setItem: (key, value) => {\n            store[key] = value;\n        },\n        removeItem: (key) => {\n            delete store[key];\n        },\n    };\n}\n//# sourceMappingURL=local-storage.js.map"]},"metadata":{},"sourceType":"module"}