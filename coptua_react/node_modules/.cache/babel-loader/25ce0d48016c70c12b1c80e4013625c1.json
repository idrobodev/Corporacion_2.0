{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/coptua_react/src/components/Context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { apiService, ROLES } from \"../../services/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Make useAuth\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const initializeAuth = async () => {\n      setLoading(true);\n      try {\n        const {\n          data: user\n        } = await apiService.getCurrentUser();\n        setCurrentUser(user);\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        setCurrentUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // User login using email password\n  const login = async (email, password) => {\n    const {\n      data,\n      error\n    } = await apiService.login(email, password);\n    if (error) throw error;\n    setCurrentUser(data.user);\n    return {\n      user: data.user\n    };\n  };\n\n  // User logout\n  const logout = async () => {\n    const {\n      error\n    } = await apiService.logout();\n    if (error) throw error;\n    setCurrentUser(null);\n    return {\n      success: true\n    };\n  };\n\n  // forget Password\n  const forgetPassword = async email => {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: window.location.origin + '/reset-password'\n    });\n    if (error) throw error;\n    return {\n      success: true\n    };\n  };\n\n  // Context values\n  const value = {\n    currentUser,\n    logout,\n    login,\n    forgetPassword,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","apiService","ROLES","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","initializeAuth","data","user","getCurrentUser","error","console","login","email","password","logout","success","forgetPassword","supabase","auth","resetPasswordForEmail","redirectTo","window","location","origin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/coptua_react/src/components/Context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { apiService, ROLES } from \"../../services/apiService\";\nconst AuthContext = createContext();\n\n// Make useAuth\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const initializeAuth = async () => {\n      setLoading(true);\n      try {\n        const { data: user } = await apiService.getCurrentUser();\n        setCurrentUser(user);\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        setCurrentUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n\n  // User login using email password\n  const login = async (email, password) => {\n    const { data, error } = await apiService.login(email, password);\n\n    if (error) throw error;\n\n    setCurrentUser(data.user);\n    return { user: data.user };\n  };\n\n  // User logout\n  const logout = async () => {\n    const { error } = await apiService.logout();\n    if (error) throw error;\n    setCurrentUser(null);\n    return { success: true };\n  };\n\n\n  // forget Password\n  const forgetPassword = async (email) => {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: window.location.origin + '/reset-password',\n    });\n    if (error) throw error;\n    return { success: true };\n  };\n\n\n  // Context values\n  const value = {\n    currentUser,\n    logout,\n    login,\n    forgetPassword,\n    loading,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}