{"ast":null,"code":"import { API_VERSION_HEADER_NAME, BASE64URL_REGEX } from './constants';\nimport { AuthInvalidJwtError } from './errors';\nimport { base64UrlToUint8Array, stringFromBase64URL } from './base64url';\nexport function expiresAt(expiresIn) {\n  const timeNow = Math.round(Date.now() / 1000);\n  return timeNow + expiresIn;\n}\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false;\n  }\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false;\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false;\n  }\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable;\n  }\n  const randomKey = `lswt-${Math.random()}${Math.random()}`;\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey);\n    globalThis.localStorage.removeItem(randomKey);\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = true;\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = false;\n  }\n  return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n  const result = {};\n  const url = new URL(href);\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value;\n      });\n    } catch (e) {\n      // hash is not a query string\n    }\n  }\n  // search parameters take precedence over hash parameters\n  url.searchParams.forEach((value, key) => {\n    result[key] = value;\n  });\n  return result;\n}\nexport const resolveFetch = customFetch => {\n  let _fetch;\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) => import('@supabase/node-fetch').then(({\n      default: fetch\n    }) => fetch(...args));\n  } else {\n    _fetch = fetch;\n  }\n  return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = maybeResponse => {\n  return typeof maybeResponse === 'object' && maybeResponse !== null && 'status' in maybeResponse && 'ok' in maybeResponse && 'json' in maybeResponse && typeof maybeResponse.json === 'function';\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n  await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n  const value = await storage.getItem(key);\n  if (!value) {\n    return null;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (_a) {\n    return value;\n  }\n};\nexport const removeItemAsync = async (storage, key) => {\n  await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n  constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n    this.promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\nDeferred.promiseConstructor = Promise;\nexport function decodeJWT(token) {\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    throw new AuthInvalidJwtError('Invalid JWT structure');\n  }\n  // Regex checks for base64url format\n  for (let i = 0; i < parts.length; i++) {\n    if (!BASE64URL_REGEX.test(parts[i])) {\n      throw new AuthInvalidJwtError('JWT not in base64url format');\n    }\n  }\n  const data = {\n    // using base64url lib\n    header: JSON.parse(stringFromBase64URL(parts[0])),\n    payload: JSON.parse(stringFromBase64URL(parts[1])),\n    signature: base64UrlToUint8Array(parts[2]),\n    raw: {\n      header: parts[0],\n      payload: parts[1]\n    }\n  };\n  return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n  return await new Promise(accept => {\n    setTimeout(() => accept(null), time);\n  });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n  const promise = new Promise((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n    (async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt);\n          if (!isRetryable(attempt, null, result)) {\n            accept(result);\n            return;\n          }\n        } catch (e) {\n          if (!isRetryable(attempt, e)) {\n            reject(e);\n            return;\n          }\n        }\n      }\n    })();\n  });\n  return promise;\n}\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n  const verifierLength = 56;\n  const array = new Uint32Array(verifierLength);\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n    const charSetLen = charSet.length;\n    let verifier = '';\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n    }\n    return verifier;\n  }\n  crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n  const encoder = new TextEncoder();\n  const encodedData = encoder.encode(randomString);\n  const hash = await crypto.subtle.digest('SHA-256', encodedData);\n  const bytes = new Uint8Array(hash);\n  return Array.from(bytes).map(c => String.fromCharCode(c)).join('');\n}\nexport async function generatePKCEChallenge(verifier) {\n  const hasCryptoSupport = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined' && typeof TextEncoder !== 'undefined';\n  if (!hasCryptoSupport) {\n    console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n    return verifier;\n  }\n  const hashed = await sha256(verifier);\n  return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n  const codeVerifier = generatePKCEVerifier();\n  let storedCodeVerifier = codeVerifier;\n  if (isPasswordRecovery) {\n    storedCodeVerifier += '/PASSWORD_RECOVERY';\n  }\n  await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n  const codeChallenge = await generatePKCEChallenge(codeVerifier);\n  const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n  return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n  const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n  if (!apiVersion) {\n    return null;\n  }\n  if (!apiVersion.match(API_VERSION_REGEX)) {\n    return null;\n  }\n  try {\n    const date = new Date(`${apiVersion}T00:00:00.0Z`);\n    return date;\n  } catch (e) {\n    return null;\n  }\n}\nexport function validateExp(exp) {\n  if (!exp) {\n    throw new Error('Missing exp claim');\n  }\n  const timeNow = Math.floor(Date.now() / 1000);\n  if (exp <= timeNow) {\n    throw new Error('JWT has expired');\n  }\n}\nexport function getAlgorithm(alg) {\n  switch (alg) {\n    case 'RS256':\n      return {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: {\n          name: 'SHA-256'\n        }\n      };\n    case 'ES256':\n      return {\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n        hash: {\n          name: 'SHA-256'\n        }\n      };\n    default:\n      throw new Error('Invalid alg claim');\n  }\n}\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nexport function validateUUID(str) {\n  if (!UUID_REGEX.test(str)) {\n    throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n  }\n}\nexport function userNotAvailableProxy() {\n  const proxyTarget = {};\n  return new Proxy(proxyTarget, {\n    get: (target, prop) => {\n      if (prop === '__isUserNotAvailableProxy') {\n        return true;\n      }\n      // Preventative check for common problematic symbols during cloning/inspection\n      // These symbols might be accessed by structuredClone or other internal mechanisms.\n      if (typeof prop === 'symbol') {\n        const sProp = prop.toString();\n        if (sProp === 'Symbol(Symbol.toPrimitive)' || sProp === 'Symbol(Symbol.toStringTag)' || sProp === 'Symbol(util.inspect.custom)') {\n          // Node.js util.inspect\n          return undefined;\n        }\n      }\n      throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n    },\n    set: (_target, prop) => {\n      throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n    },\n    deleteProperty: (_target, prop) => {\n      throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n    }\n  });\n}\n/**\n * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n * Note: Only works for JSON-safe data.\n */\nexport function deepClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}","map":{"version":3,"sources":["../../../src/lib/helpers.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { API_VERSION_HEADER_NAME, BASE64URL_REGEX } from './constants';\nimport { AuthInvalidJwtError } from './errors';\nimport { base64UrlToUint8Array, stringFromBase64URL } from './base64url';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\nexport function decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n        if (!BASE64URL_REGEX.test(parts[i])) {\n            throw new AuthInvalidJwtError('JWT not in base64url format');\n        }\n    }\n    const data = {\n        // using base64url lib\n        header: JSON.parse(stringFromBase64URL(parts[0])),\n        payload: JSON.parse(stringFromBase64URL(parts[1])),\n        signature: base64UrlToUint8Array(parts[2]),\n        raw: {\n            header: parts[0],\n            payload: parts[1],\n        },\n    };\n    return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nexport async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\n        typeof crypto.subtle !== 'undefined' &&\n        typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\n        return date;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexport function validateExp(exp) {\n    if (!exp) {\n        throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n        throw new Error('JWT has expired');\n    }\n}\nexport function getAlgorithm(alg) {\n    switch (alg) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' },\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: { name: 'SHA-256' },\n            };\n        default:\n            throw new Error('Invalid alg claim');\n    }\n}\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nexport function validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n}\nexport function userNotAvailableProxy() {\n    const proxyTarget = {};\n    return new Proxy(proxyTarget, {\n        get: (target, prop) => {\n            if (prop === '__isUserNotAvailableProxy') {\n                return true;\n            }\n            // Preventative check for common problematic symbols during cloning/inspection\n            // These symbols might be accessed by structuredClone or other internal mechanisms.\n            if (typeof prop === 'symbol') {\n                const sProp = prop.toString();\n                if (sProp === 'Symbol(Symbol.toPrimitive)' ||\n                    sProp === 'Symbol(Symbol.toStringTag)' ||\n                    sProp === 'Symbol(util.inspect.custom)') {\n                    // Node.js util.inspect\n                    return undefined;\n                }\n            }\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n        },\n        set: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n        deleteProperty: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n    });\n}\n/**\n * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n * Note: Only works for JSON-safe data.\n */\nexport function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"module"}