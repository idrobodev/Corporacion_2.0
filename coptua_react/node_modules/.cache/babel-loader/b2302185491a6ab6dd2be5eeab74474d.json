{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n/**\n * Custom hook para manejar el estado del sidebar a través de toda la aplicación\n * Permite abrir/cerrar y colapsar/expandir el sidebar, guardando el estado en localStorage\n */\nconst useSidebar = () => {\n  _s();\n  // Estado para controlar si el sidebar está abierto en móvil\n  const [sidebarOpen, setSidebarOpen] = useState(() => {\n    try {\n      const v = localStorage.getItem('sidebarOpen');\n      return v ? JSON.parse(v) : false;\n    } catch (_) {\n      return false;\n    }\n  });\n\n  // Estado para controlar si el sidebar está colapsado en desktop\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(() => {\n    try {\n      const v = localStorage.getItem('sidebarCollapsed');\n      return v ? JSON.parse(v) : false;\n    } catch (_) {\n      return false;\n    }\n  });\n\n  // Detectar cambios de tamaño de pantalla para ajustar el sidebar\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768) {\n        // En desktop, cerramos el sidebar móvil\n        setSidebarOpen(false);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  /**\n   * Función para alternar el estado de apertura del sidebar en móvil\n   */\n  const toggleSidebarOpen = () => {\n    const next = !sidebarOpen;\n    setSidebarOpen(next);\n    try {\n      localStorage.setItem('sidebarOpen', JSON.stringify(next));\n    } catch (_) {}\n  };\n\n  /**\n   * Función para alternar el estado de colapso del sidebar en desktop\n   */\n  const toggleSidebarCollapsed = () => {\n    const next = !sidebarCollapsed;\n    setSidebarCollapsed(next);\n    try {\n      localStorage.setItem('sidebarCollapsed', JSON.stringify(next));\n    } catch (_) {}\n  };\n  return {\n    sidebarOpen,\n    sidebarCollapsed,\n    toggleSidebarOpen,\n    toggleSidebarCollapsed\n  };\n};\n_s(useSidebar, \"C0iMKjd5ItD3VNfIa6e+XTkOIkc=\");\nexport default useSidebar;","map":{"version":3,"names":["useState","useEffect","useSidebar","_s","sidebarOpen","setSidebarOpen","v","localStorage","getItem","JSON","parse","_","sidebarCollapsed","setSidebarCollapsed","handleResize","window","innerWidth","addEventListener","removeEventListener","toggleSidebarOpen","next","setItem","stringify","toggleSidebarCollapsed"],"sources":["/Users/todoporunalma/Desktop/coptua_react/src/hooks/useSidebar.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Custom hook para manejar el estado del sidebar a través de toda la aplicación\n * Permite abrir/cerrar y colapsar/expandir el sidebar, guardando el estado en localStorage\n */\nconst useSidebar = () => {\n  // Estado para controlar si el sidebar está abierto en móvil\n  const [sidebarOpen, setSidebarOpen] = useState(() => {\n    try {\n      const v = localStorage.getItem('sidebarOpen');\n      return v ? JSON.parse(v) : false;\n    } catch (_) {\n      return false;\n    }\n  });\n\n  // Estado para controlar si el sidebar está colapsado en desktop\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(() => {\n    try {\n      const v = localStorage.getItem('sidebarCollapsed');\n      return v ? JSON.parse(v) : false;\n    } catch (_) {\n      return false;\n    }\n  });\n\n  // Detectar cambios de tamaño de pantalla para ajustar el sidebar\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768) {\n        // En desktop, cerramos el sidebar móvil\n        setSidebarOpen(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  /**\n   * Función para alternar el estado de apertura del sidebar en móvil\n   */\n  const toggleSidebarOpen = () => {\n    const next = !sidebarOpen;\n    setSidebarOpen(next);\n    try { \n      localStorage.setItem('sidebarOpen', JSON.stringify(next)); \n    } catch (_) {}\n  };\n\n  /**\n   * Función para alternar el estado de colapso del sidebar en desktop\n   */\n  const toggleSidebarCollapsed = () => {\n    const next = !sidebarCollapsed;\n    setSidebarCollapsed(next);\n    try { \n      localStorage.setItem('sidebarCollapsed', JSON.stringify(next)); \n    } catch (_) {}\n  };\n\n  return { \n    sidebarOpen, \n    sidebarCollapsed, \n    toggleSidebarOpen, \n    toggleSidebarCollapsed \n  };\n};\n\nexport default useSidebar;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,MAAM;IACnD,IAAI;MACF,MAAMM,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC7C,OAAOF,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,GAAG,KAAK;IAClC,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,OAAO,KAAK;IACd;EACF,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,MAAM;IAC7D,IAAI;MACF,MAAMM,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;MAClD,OAAOF,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,GAAG,KAAK;IAClC,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,OAAO,KAAK;IACd;EACF,CAAC,CAAC;;EAEF;EACAV,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QAC5B;QACAX,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC;IAEDU,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAG,CAAChB,WAAW;IACzBC,cAAc,CAACe,IAAI,CAAC;IACpB,IAAI;MACFb,YAAY,CAACc,OAAO,CAAC,aAAa,EAAEZ,IAAI,CAACa,SAAS,CAACF,IAAI,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOT,CAAC,EAAE,CAAC;EACf,CAAC;;EAED;AACF;AACA;EACE,MAAMY,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMH,IAAI,GAAG,CAACR,gBAAgB;IAC9BC,mBAAmB,CAACO,IAAI,CAAC;IACzB,IAAI;MACFb,YAAY,CAACc,OAAO,CAAC,kBAAkB,EAAEZ,IAAI,CAACa,SAAS,CAACF,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOT,CAAC,EAAE,CAAC;EACf,CAAC;EAED,OAAO;IACLP,WAAW;IACXQ,gBAAgB;IAChBO,iBAAiB;IACjBI;EACF,CAAC;AACH,CAAC;AAACpB,EAAA,CA9DID,UAAU;AAgEhB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}