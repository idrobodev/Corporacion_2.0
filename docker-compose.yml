version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todoporunalma-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-todoporunalma_db}
      POSTGRES_USER: ${POSTGRES_USER:-todoporunalma_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-todoporunalma_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_setup.sql:/docker-entrypoint-initdb.d/01_database_setup.sql
    networks:
      - todoporunalma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-todoporunalma_user} -d ${POSTGRES_DB:-todoporunalma_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: todoporunalma-api
    restart: unless-stopped
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-todoporunalma_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-todoporunalma_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-todoporunalma_pass}

      # JWT Configuration
      APP_JWT_SECRET: ${JWT_SECRET:-todoporunalma-jwt-secret-key-2024-very-long-and-secure-key-for-production}
      APP_JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      APP_JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}

      # CORS Configuration
      APP_CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost,http://localhost:3000,http://localhost:80,http://127.0.0.1:3000,http://127.0.0.1:80,https://todoporunalma.org}

      # Logging
      LOGGING_LEVEL_ORG_TODOPORUNALMA: ${LOG_LEVEL:-INFO}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: ${LOG_LEVEL:-INFO}
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: ${LOG_LEVEL:-INFO}

      # Profile
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE:-production}
      # JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      # Disable Flyway to avoid circular init in container (DB seeded via init-db)
      SPRING_FLYWAY_ENABLED: "false"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todoporunalma-network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.react
      args:
        REACT_APP_API_BASE_URL: /api
    container_name: todoporunalma-frontend
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      api:
        condition: service_healthy
    networks:
      - todoporunalma-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  todoporunalma-network:
    driver: bridge
